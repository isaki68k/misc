pxdc の仕様書 (2014/05/10)

  XM6i の仮想デバイス Pluto-X による準仮想化(?)っぽい SCSI コントローラ


MB89352 との関係

	pxdc は準仮想化による高速化を目指したものだが、このままでは起動 HD に
	なることが出来ない。拡張 SCSI ボード同様に独自の ROM を用意するなど
	して仮に pxdc 下の HD から起動できたとしても、pxdc 非対応カーネル
	(OS) で起動するたびに SRAM の設定を変更しなければならなくなるので、
	これは避けたい。

	そこで、まったく通常どおりに MB89352 等から起動してきた後で、pxdc に
	アクセスして MB89352 の特定の SCSI ID デバイスだけを切り離して pxdc
	配下に置き換えるという方法を検討する。
	コントローラごとではなく、特定 SCSI ID ごとに切り替える方式なのは
	現行で pxdc が CD/MO を扱えない公算が高いため、まずは HD だけ pxdc で
	高速化しておき、CD/MO については従来どおり MB89352 エミュレーションで
	使用することを想定している。

	NetBSD で言えば、ブートローダがカーネルをロードするまでは MB89352 で
	行い、カーネルのデバイスプローブ中に spc より先に pxdc がプローブされ
	てこれ以降 pxdc を使うみたいなことを想定。


SCSI コマンド
	SCSI コマンド (CDB?) は CDB レジスタに書き込んで、コマンドレジスタに
	開始要求を出す感じ。

	サポートを予定しているコマンド:
	  $00: Test Drive Ready
	  $01: Rezero Unit
	  $03: Request Sense
	  $08: Read(6)
	  $0A: Write(6)
	  $12: Inquiry
	  $1A: Mode Sense
	  $25: Read Capacity
	  $28: Read(10)
	  $2A: Write(10)
	  $35: Synchronize Cache
	その他ゲスト OS から発行されたコマンドには対応するはず。

転送モード
	pxdc は PIO モードと pxdma モードの2つの転送モードを持って
	おり、モード選択レジスタ(?)で設定する。

	PIO モードは、pxdc が データ転送レジスタを持っており
	ここへの読み書きを通じて行う方法。

	DMA モードは pxdc に転送開始アドレスと転送データ長を指定して、
	pxdma によって DMA 転送する方法。pxdma は Pluto-X が提供する準仮想化
	DMA コントローラ。

	DMAC(HD68450) による DMA は、PIO モードを使用することで可能だが
	転送速度的に意味は無い。


メモリマップ

	$eac700〜$eac7ff (予定) コントロールブロック
	 * eac800 と並べる必要なくなったので別のブロックでもいいかも。


レジスタ

	いずれもアドレス未定。

	シグネチャレジスタ (Word? or Long?、ReadOnly)
		pxdc シグネチャ。このデバイスのバージョンとかを含むかも。

	ターゲットデバイスイネーブル/ステータス (Byte?×8、Read/Write)
		8バイトあり、それぞれ ID=0 〜 7 に対応。

		読み込み時はターゲットデバイスの状態を示す。

		  %TTTT000E 
		   ||||   +- %1 なら pxdc、%0 なら MB89352 の制御下
		   ||||
		   ++++----- デバイスタイプ
		             %0000: 接続なし
		             %0001: HD
		             %0010: CD
		             %0011: MO
		             %1111: イニシエータ

		E が %1 ならこのターゲットデバイスが pxdc 制御下にあること
		を示す。%0 なら MB89352 の制御下にあるので pxdc からは
		アクセスできない。
		デバイスタイプは SCSI Inquiry コマンド等での種別情報とは
		無関係に XM6i のデバイスの状態を示している。

		書き込み時はターゲットデバイスの状態を変更する。

		  %xxxxxxxE
		          +- pxdc 配下に切り替え

		上位7ビットは書き込みは無視される。E に %1 を書き込むと
		ターゲットデバイスは MB89352 から切り離されて pxdc の制御下
		となる。E に %0 を書き込むとターゲットデバイスは MB89352 の
		制御下に戻る機能は予約であり未実装。したがって一度ターゲット
		デバイスの制御を pxdc に切り替えるとハードウェアリセットする
		までは、MB89352 に戻す方法はない。
		デバイスが存在しないか、pxdc がサポートしていないデバイスで
		あればこの操作は何も起こらない。
		現在のところ pxdc は SCSI HD のみサポートしている。
		書き込み後にターゲットデバイスステータスレジスタの E ビット
		を読んで切り替えが出来たか確認できる。

	ドライブ選択レジスタ (Byte?、R/W)
		下位3ビットにアクセスする SCSI ID を指定する。
		読み出しは現在選択されている ID を返す。
		リセット時は 0 に初期化?

		  %00000DDD
		        +++- SCSI ID

	モード選択レジスタ (Byte?、R/W)
		転送モードの選択を行う。
		書き込みで設定を変更、読み込みは現在値が読み出せる。
		転送途中で切り替えた場合の動作は不定?

		  %0000000P
		          +- PXDMA モード
		             %0: PIO モード
		             %1: PXDMA モード (予約)

	コマンドレジスタ (Byte?、WriteOnly?)

		  %00000SSS
		        +++- コマンド開始
		             %000: 何も起こらない
		             %001: 6バイトCDBコマンド開始
		             %010: 10バイトCDBコマンド開始
		             %011: 12バイトCDBコマンド開始
		             %100〜%111: (予約)

		コマンド開始は、あらかじめ CDB に書き込まれた SCSI コマンド
		の処理を開始する。処理が成功したか否かはステータスレジスタで
		確認すること?

		あるいは、いっそ単にコマンド長をそのまま書き込むのはどうか。

	ステータスレジスタ	(size?、ReadOnly)
		o 転送完了かエラーかを示すビット?
		o エラー原因を複数ビットで表すとか必要かも?

	SCSI ステータスレジスタ (Byte、ReadOnly)
		とかいる?

	CDB レジスタ (16Byte、Read/Write)
		CDB を書き込むバッファ。
		CDB をここに書き込んだ後コマンドレジスタに適切な長さの CDB
		コマンド開始を書き込むことで SCSI 要求を処理する。

		このレジスタは RAM であり、リセット時は 0xff で初期化される以外は
		pxdc コントローラがこのレジスタの値を変更することはない。

		応答は、Pluto-X DMA か PIO データ転送レジスタから読み出す?
		あるいは PIO データ転送レジスタから読み出す一択でもよい?

	転送バイト数レジスタ (Long、ReadOnly)
		デバイスが転送を要求している残りバイト数。

	PIO データ転送レジスタ (Byte、Read/Write)
		* (アドレス末尾 %11 に配置する)
		データ転送用のレジスタ。


	転送開始アドレスレジスタ (Long、Read?/Write)
		pxdma モードの場合の CPU 側メモリの転送開始アドレスを指定する。
		アドレスは物理アドレス?

	転送データ長レジスタ (Long、Read?/Write)
		pxdma モードの場合の転送データ長を指定する。
		単位はバイト。

(EOF)
