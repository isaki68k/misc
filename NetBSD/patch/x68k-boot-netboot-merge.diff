boot に netboot をマージするパッチです。未完成。
boot は netboot 機能が追加になります。つまりデフォルトは
{fd,sd}?a:/netbsd から起動するモードだけど、プロンプトから
boot nfs:/netbsd って打てばネットワークブートが出来ます。
これはたぶんいい感じに動いてると思う。

で、netboot のほうは、上記の netboot 入り boot だけどデフォルトが
nfs:/netbsd になっただけ版 (カウントダウンでとめて boot sd0a:/netbsd
とか出来る) にするつもりがなぜか意味不明なコンパイルエラーになるので、
誰かたすけてくだしあ orz


Index: sys/arch/x68k/stand/boot/Makefile
===================================================================
RCS file: /cvsroot/src/sys/arch/x68k/stand/boot/Makefile,v
retrieving revision 1.26
diff -u -r1.26 Makefile
--- sys/arch/x68k/stand/boot/Makefile	8 Aug 2014 15:19:51 -0000	1.26
+++ sys/arch/x68k/stand/boot/Makefile	8 Aug 2014 15:34:06 -0000
@@ -4,8 +4,10 @@
 
 .include <bsd.own.mk>
 
+BOOTDIR=	${.CURDIR}/../boot
+
 BOOT=		Multi-boot
-VERSIONFILE=	${.CURDIR}/version
+VERSIONFILE=	${BOOTDIR}/version
 VERSION!=	${TOOL_AWK} -F: '$$1 ~ /^[0-9.]*$$/ { it = $$1; } \
 			END { print it }' ${VERSIONFILE}
 NEWVERSWHAT=	"${BOOT}"
@@ -13,14 +15,19 @@
 # text address
 TEXT=		006000
 
-PROG=		boot
+# RTC offset
+RTC_OFFSET=	-540
+
+PROG?=		boot
 BINDIR=		/usr/mdec
 BINMODE=	444
 STRIPFLAG=
 
 BFDNAME=	a.out-m68k-netbsd
 
-SRCS=		srt0.S boot.c conf.c switch.c exec_image.S
+.PATH:	${BOOTDIR}
+
+SRCS=		srt0.S boot.c conf.c switch.c exec_image.S if_ne.c ne.c dp8390.c
 S=		${.CURDIR}/../../../..
 M=		${.CURDIR}/../..
 COMMONDIR=	$M/stand/common
@@ -39,9 +46,14 @@
 CPPFLAGS+=	-DTEXTADDR="0x${TEXT}" 
 CPPFLAGS+=	-DBOOT=\"${BOOT}\" -DBOOT_VERS=\"${VERSION}\"
 CPPFLAGS+=	-DLIBSA_ENABLE_LS_OP
+CPPFLAGS+=	-DRTC_OFFSET=${RTC_OFFSET}
+CPPFLAGS+=	-DSUPPORT_BOOTP -DSUPPORT_DHCP
+.if defined(DEFAULT_KERNEL_IS_NFS)
+CPPFLAGS=	-DDEFAULT_KERNEL_IS_NFS
+.endif
 #CPPFLAGS+=	-DDEBUG
 CFLAGS=		-Wno-main -Os -m68020-60
-LINKFLAGS=	-N -static -T ${.CURDIR}/boot.ldscript
+LINKFLAGS=	-N -static -T ${BOOTDIR}/boot.ldscript
 LIBIOCS!=	cd $M/stand/libiocs && ${PRINTOBJDIR}
 LIBSA!=		cd $M/stand/libsa && ${PRINTOBJDIR}
 L=		${LIBSA}/lib
Index: sys/arch/x68k/stand/boot/boot.c
===================================================================
RCS file: /cvsroot/src/sys/arch/x68k/stand/boot/boot.c,v
retrieving revision 1.22
diff -u -r1.22 boot.c
--- sys/arch/x68k/stand/boot/boot.c	5 Aug 2014 13:49:04 -0000	1.22
+++ sys/arch/x68k/stand/boot/boot.c	8 Aug 2014 15:34:06 -0000
@@ -32,9 +32,7 @@
 #include <lib/libsa/stand.h>
 #include <lib/libsa/loadfile.h>
 #include <lib/libsa/ufs.h>
-#ifdef NETBOOT
 #include <lib/libsa/dev_net.h>
-#endif
 #include <lib/libkern/libkern.h>
 
 #include "libx68k.h"
@@ -50,38 +48,29 @@
 #define SRAM_MEMSIZE	(*((long*) 0x00ed0008))
 
 char default_kernel[20] =
-#ifndef NETBOOT
-    "sd0a:netbsd";
-#else
+#if defined(DEFAULT_KERNEL_IS_NFS)
     "nfs:netbsd";
+#else
+    "sd0a:netbsd";
 #endif
 int mpu;
-#ifndef NETBOOT
 int hostadaptor;
-#endif
 int console_device = -1;
 
 #ifdef DEBUG
-#ifdef NETBOOT
 int debug = 1;
 #endif
-#endif
 
 static void help(void);
-#ifndef NETBOOT
 static int get_scsi_host_adapter(void);
-#endif
 static void doboot(const char *, int);
 static void boot(char *);
-#ifndef NETBOOT
 static void cmd_ls(char *);
-#endif
 int bootmenu(void);
 void bootmain(int);
 extern int detectmpu(void);
 extern int badbaddr(void *);
 
-#ifndef NETBOOT
 /* from boot_ufs/bootmain.c */
 static int
 get_scsi_host_adapter(void)
@@ -104,25 +93,19 @@
 
 	return ha;
 }
-#endif
 
 static void
 help(void)
 {
 	printf("Usage:\n");
 	printf("boot [dev:][file] -[flags]\n");
-#ifndef NETBOOT
 	printf(" dev:   sd<ID><PART>, ID=0-7, PART=a-p\n");
 	printf("        cd<ID>a, ID=0-7\n");
 	printf("        fd<UNIT>a, UNIT=0-3, format is detected.\n");
-#else
-	printf(" dev:   nfs, first probed NE2000 is used.\n");
-#endif
+	printf("        nfs, first probed NE2000 is used.\n");
 	printf(" file:  netbsd, netbsd.gz, etc.\n");
 	printf(" flags: abdqsv\n");
-#ifndef NETBOOT
 	printf("ls [dev:][directory]\n");
-#endif
 	printf("switch [show | key=val]\n");
 	printf("halt\nreboot\n");
 }
@@ -155,41 +138,39 @@
 	}
 
 #ifdef DEBUG
-#ifndef NETBOOT
-	printf("dev = %x, unit = %d, part = %c, name = %s\n",
-	       dev, unit, part + 'a', name);
-#else
-	printf("dev = %x, unit = %d, name = %s\n",
-	       dev, unit, name);
-#endif
+	if (dev != 3) {
+		printf("dev = %x, unit = %d, part = %c, name = %s\n",
+		       dev, unit, part + 'a', name);
+	} else {
+		printf("dev = %x, unit = %d, name = %s\n",
+		       dev, unit, name);
+	}
 #endif
 
-#ifndef NETBOOT
 	if (dev == 0) {		/* SCSI */
 		dev = X68K_MAKESCSIBOOTDEV(X68K_MAJOR_SD,
 					   hostadaptor >> 4,
 					   hostadaptor & 15,
 					   unit & 7, 0, 0);
+	} else if (dev == 3) {	/* NE */
+		dev = X68K_MAKEBOOTDEV(X68K_MAJOR_NE, unit, 0);
 	} else {
 		dev = X68K_MAKEBOOTDEV(X68K_MAJOR_FD, unit & 3, 0);
 	}
-#else
-	dev = X68K_MAKEBOOTDEV(X68K_MAJOR_NE, unit, 0);
-#endif
 #ifdef DEBUG
 	printf("boot device = %x\n", dev);
-#ifndef NETBOOT
-	printf("if = %d, unit = %d, id = %d, lun = %d, part = %c\n",
-	       B_X68K_SCSI_IF(dev),
-	       B_X68K_SCSI_IF_UN(dev),
-	       B_X68K_SCSI_ID(dev),
-	       B_X68K_SCSI_LUN(dev),
-	       B_X68K_SCSI_PART(dev) + 'a');
-#else
-	printf("if = %d, unit = %d\n",
-	       B_X68K_SCSI_IF(dev),
-	       B_X68K_SCSI_IF_UN(dev));
-#endif
+	if (dev < 3) {
+		printf("if = %d, unit = %d, id = %d, lun = %d, part = %c\n",
+		       B_X68K_SCSI_IF(dev),
+		       B_X68K_SCSI_IF_UN(dev),
+		       B_X68K_SCSI_ID(dev),
+		       B_X68K_SCSI_LUN(dev),
+		       B_X68K_SCSI_PART(dev) + 'a');
+	} else {
+		printf("if = %d, unit = %d\n",
+		       B_X68K_SCSI_IF(dev),
+		       B_X68K_SCSI_IF_UN(dev));
+	}
 #endif
 
 	p = ((short*) marks[MARK_ENTRY]) - 1;
@@ -251,7 +232,6 @@
 	}
 }
 
-#ifndef NETBOOT
 static void
 cmd_ls(char *arg)
 {
@@ -269,10 +249,16 @@
 		if (*(strchr(arg, ':')+1) == 0)
 			strcat(filename, "/");
 	}
-	ls(filename);
+
+	/* fd and nfs does not support ls */
+	if (filename[0] == 'f' || filename[0] == 'n') {
+		printf("ls: not supported for requested device\n");
+	} else {
+		ls(filename);
+	}
+
 	devopen_open_dir = 0;
 }
-#endif
 
 int
 bootmenu(void)
@@ -322,10 +308,8 @@
 			exit(0);
 		else if (strcmp("switch", p) == 0)
 			cmd_switch(options);
-#ifndef NETBOOT
 		else if (strcmp("ls", p) == 0)
 			cmd_ls(options);
-#endif
 		else
 			printf("Unknown command %s\n", p);
 	}
@@ -363,12 +347,11 @@
 	u_int sram_memsize;
 	u_int probed_memsize;
 
-#ifndef NETBOOT
 	hostadaptor = get_scsi_host_adapter();
-#else
 	rtc_offset = RTC_OFFSET;
+	/* XXX nfs */
 	try_bootp = 1;
-#endif
+
 	mpu = detectmpu();
 
 	if (mpu < 3) {		/* not tested on 68020 */
@@ -384,7 +367,7 @@
 	console_device = consio_init(console_device);
 	setheap(HEAP_START, HEAP_END);
 
-#ifndef NETBOOT
+#if !defined(DEFAULT_KERNEL_IS_NFS)
 	switch (B_TYPE(bootdev)) {
 	case X68K_MAJOR_FD:
 		default_kernel[0] = 'f';
Index: sys/arch/x68k/stand/boot/conf.c
===================================================================
RCS file: /cvsroot/src/sys/arch/x68k/stand/boot/conf.c,v
retrieving revision 1.10
diff -u -r1.10 conf.c
--- sys/arch/x68k/stand/boot/conf.c	12 Oct 2012 20:15:52 -0000	1.10
+++ sys/arch/x68k/stand/boot/conf.c	8 Aug 2014 15:34:06 -0000
@@ -27,7 +27,10 @@
  */
 
 #include <sys/param.h>
+#include <netinet/in.h>
 #include <lib/libsa/stand.h>
+#include <lib/libsa/dev_net.h>
+#include <lib/libsa/nfs.h>
 #include <lib/libsa/ufs.h>
 #include <lib/libsa/lfs.h>
 #include <lib/libsa/cd9660.h>
@@ -39,6 +42,7 @@
 	{ "sd",	sdstrategy, sdopen, sdclose, noioctl },
 	{ "cd",	cdstrategy, cdopen, cdclose, noioctl },
 	{ "fd",	fdstrategy, fdopen, fdclose, noioctl },
+	{ "nfs", net_strategy, net_open, net_close, net_ioctl },
 	{ 0, 0, 0, 0, 0 }
 };
 
@@ -48,6 +52,7 @@
 	{ "sd", 0, 7, 0 },
 	{ "cd", 1, 7, 0 },
 	{ "fd", 2, 3, 0 },
+	{ "nfs", 3, 1, 1 },
 	{ NULL, 0, 0, 0 }
 };
 
@@ -58,8 +63,16 @@
 	FS_OPS(lfsv2),
 	FS_OPS(cd9660),
 	FS_OPS(ustarfs),
+	FS_OPS(nfs),
 };
 
 int nfsys = sizeof(file_system) / sizeof(file_system[0]);
 
 struct open_file files[SOPEN_MAX];
+
+extern struct netif_driver ne_netif_driver;
+
+struct netif_driver *netif_drivers[] = {
+	&ne_netif_driver,
+};
+int n_netif_drivers = sizeof(netif_drivers) / sizeof(netif_drivers[0]);
Index: sys/arch/x68k/stand/boot/version
===================================================================
RCS file: /cvsroot/src/sys/arch/x68k/stand/boot/version,v
retrieving revision 1.6
diff -u -r1.6 version
--- sys/arch/x68k/stand/boot/version	12 Oct 2012 18:06:27 -0000	1.6
+++ sys/arch/x68k/stand/boot/version	8 Aug 2014 15:34:06 -0000
@@ -12,3 +12,4 @@
 1.4:	ffsv2 support.
 1.5:	Make key interrupt to get boot menu works properly even after
 	non ASCII keys (CTRL, OPT.1 etc.) are pressed during boot.
+1.6:	Merge netboot.
Index: sys/arch/x68k/stand/boot_ustar/boot_ustar.S
===================================================================
RCS file: /cvsroot/src/sys/arch/x68k/stand/boot_ustar/boot_ustar.S,v
retrieving revision 1.7
diff -u -r1.7 boot_ustar.S
--- sys/arch/x68k/stand/boot_ustar/boot_ustar.S	21 Feb 2011 02:31:58 -0000	1.7
+++ sys/arch/x68k/stand/boot_ustar/boot_ustar.S	8 Aug 2014 15:34:06 -0000
@@ -69,7 +69,7 @@
 		moveq	#0x70,%d1
 		orw	%d2,%d1		| PDA*256 + MODE
 		movel	%d0,%d2		| read position (first sector)
-		movel	#65536,%d3	| read bytes
+		movel	#(72*1024),%d3	| read bytes
 		moval	#(BOOT_TEXTADDR-8192-0x200-32),%a1
 		moval	%a1,%a4		| save buffer addr
 		IOCS(__B_READ)
Index: sys/arch/x68k/stand/netboot/Makefile
===================================================================
RCS file: /cvsroot/src/sys/arch/x68k/stand/netboot/Makefile,v
retrieving revision 1.6
diff -u -r1.6 Makefile
--- sys/arch/x68k/stand/netboot/Makefile	8 Aug 2014 15:19:51 -0000	1.6
+++ sys/arch/x68k/stand/netboot/Makefile	8 Aug 2014 15:34:06 -0000
@@ -1,71 +1,6 @@
 #	$NetBSD: Makefile,v 1.6 2014/08/08 15:19:51 isaki Exp $
 
-NOMAN=		# defined
-
-.include <bsd.own.mk>
-
-BOOT=		Netboot
-VERSIONFILE=	${.CURDIR}/version
-VERSION!=	${TOOL_AWK} -F: '$$1 ~ /^[0-9.]*$$/ { it = $$1; } \
-			END { print it }' ${VERSIONFILE}
-NEWVERSWHAT=	"${BOOT}"
-
-# text address
-TEXT=		006000
-
-# RTC offset
-RTC_OFFSET=	-540
-
 PROG=		netboot
-BINDIR=		/usr/mdec
-BINMODE=	444
-STRIPFLAG=
-
-BFDNAME=	a.out-m68k-netbsd
-
-# XXX shared sources should be in COMMONDIR
-BOOTDIR=	${.CURDIR}/../boot
-.PATH:		${BOOTDIR}
-
-SRCS=		srt0.S boot.c conf.c switch.c exec_image.S if_ne.c ne.c dp8390.c
-S=		${.CURDIR}/../../../..
-M=		${.CURDIR}/../..
-COMMONDIR=	$M/stand/common
-.PATH:		${COMMONDIR}
-
-SRCS+=		vers.c
-CLEANFILES+=	vers.c
-vers.c:	${VERSIONFILE}
-	${_MKTARGET_CREATE}
-	${HOST_SH} ${S}/conf/newvers_stand.sh ${${MKREPRO} == "yes" :?:-D} \
-	    ${.ALLSRC} ${MACHINE} ${NEWVERSWHAT}
-
-CPPFLAGS+=	-nostdinc -I$S -I${.OBJDIR} -I$M/stand/libsa
-CPPFLAGS+=	-I$M/stand/libiocs -I${COMMONDIR}
-CPPFLAGS+=	-D_STANDALONE -DHEAP_VARIABLE
-CPPFLAGS+=	-DTEXTADDR="0x${TEXT}" 
-CPPFLAGS+=	-DBOOT=\"${BOOT}\" -DBOOT_VERS=\"${VERSION}\"
-CPPFLAGS+=	-DNETBOOT
-CPPFLAGS+=	-DLIBSA_ENABLE_LS_OP
-CPPFLAGS+=	-DRTC_OFFSET=${RTC_OFFSET}
-CPPFLAGS+=	-DSUPPORT_BOOTP -DSUPPORT_DHCP
-#CPPFLAGS+=	-DDEBUG
-CFLAGS=		-Wno-main -Os -m68020-60
-LINKFLAGS=	-N -static -T ${BOOTDIR}/boot.ldscript
-LIBIOCS!=	cd $M/stand/libiocs && ${PRINTOBJDIR}
-LIBSA!=		cd $M/stand/libsa && ${PRINTOBJDIR}
-L=		${LIBSA}/lib
-LDLIBS= 	${L}/sa/libsa.a ${L}/kern/libkern.a ${L}/z/libz.a
-LDLIBS+=	${LIBIOCS}/libiocs.a
-
-.include "../Makefile.booters"
-
-realall: ${PROG}
-${PROG}:	${OBJS} ${LDLIBS}
-	${_MKTARGET_LINK}
-	${LD} ${LINKFLAGS} -o ${PROG}.sym ${OBJS} ${LDLIBS}
-	${STRIP} -F ${BFDNAME} -o ${PROG} ${PROG}.sym
-
-CLEANFILES+=	${PROG}.sym
+DEFAULT_KERNEL_IS_NFS=	yes
 
-.include <bsd.prog.mk>
+.include "../boot/Makefile"
